name: CI Workflow

on:
  push:
    branches:
      - dev

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: ~/.cache/buildx
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Install dependencies for frontend
        working-directory: ./frontend
        run: |
          npm install

      - name: Install dependencies for backend
        working-directory: ./backend
        run: |
          npm install

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr-public get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin public.ecr.aws/d6g9y3v8

      - name: Build frontend Docker image
        run: |
          FRONTEND_TAG="$(date +%s)"
          docker build -t frontend:$FRONTEND_TAG -f ./frontend/dockerfile-frontend ./frontend
          docker tag frontend:$FRONTEND_TAG public.ecr.aws/d6g9y3v8/frontend/reactapp:$FRONTEND_TAG
          docker push public.ecr.aws/d6g9y3v8/frontend/reactapp:$FRONTEND_TAG
          echo "FRONTEND_TAG=$FRONTEND_TAG" >> $GITHUB_ENV

      - name: Build backend Docker image
        run: |
          BACKEND_TAG="$(date +%s)"
          docker build -t backend:$BACKEND_TAG -f ./backend/dockerfile-backend ./backend
          docker tag frontend:$FRONTEND_TAG public.ecr.aws/d6g9y3v8/backend/nodeapp:$BACKEND_TAG
          docker push  public.ecr.aws/d6g9y3v8/backend/nodeapp:$BACKEND_TAG
          echo "BACKEND_TAG=$BACKEND_TAG" >> $GITHUB_ENV

      - name: Update .env file with new image tags
        run: |
          sed -i "s|FRONTEND_IMAGE_TAG=.*|FRONTEND_IMAGE_TAG=${{ env.FRONTEND_TAG }}|g" .env
          sed -i "s|BACKEND_IMAGE_TAG=.*|BACKEND_IMAGE_TAG=${{ env.BACKEND_TAG }}|g" .env

